{"version":3,"sources":["components/Header/HeaderElements.js","components/Header/index.js","components/Selection/SelectionElements.js","components/Selection/index.js","components/Selection/SelectionHelper.js","components/Layout/LayoutElements.js","components/Content/ContentElement.js","components/Content/index.js","components/Content/ContentHelper.js","helper.js","components/Article/ArticleElement.js","components/Article/index.js","components/Article/ArticleHelper.js","App.js","index.js"],"names":["HeaderWrapper","styled","div","props","background","HeaderTitle","h3","HeaderCategory","a","CategoryMark","Header","title","category","categoryUrl","data-testid","href","target","rel","SelectionWrapper","SelectionTitle","p","SelectionCities","select","City","option","Selection","data","selectCity","cities","res","amount","i","obj_name","toString","push","generateCities","id","onChange","map","city","value","Main","Wrapper","Container","MainContainer","SideContainer","Loading","LoadingText","ContentWrapper","ContentCity","h4","ContentCountry","ContentAqi","QualityIndex","h1","SubIndex","ContentCigar","Cigar","img","ContentInfo","Content","aqi","cigg","info","indexOf","split","splitIndex","quality_index","sub_index","cigars","num","cigs","generateCigars","src","draggable","processData","index","ArticleWrapper","ArticleInfo","span","Separator","ParagraphWrapper","Paragraph","Article","author","date","paragraphs","obj_prop","hasOwnProperty","generateParagraph","paragraph","App","useState","setData","useEffect","fetch","then","json","resJson","setCity","Helmet","charSet","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee768888.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n    width: 100%;\n    height: 150px;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.05), 0px 10px 20px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    padding: 20px 20px;\n    background-image: url(${props => props.background});\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 50% 30%;\n    position: relative;\n\n    :hover {\n        transition: 0.3s;\n        background-size: 110% auto;\n    }\n\n    @media screen and (max-width: 768px) {\n        border-radius: 0;\n        height: 200px;\n    }\n`\n\nexport const HeaderTitle = styled.h3`\n    font-family: \"font-regular\";\n    font-size: 18px;\n    letter-spacing: 1px;\n    color: var(--clr-base-white);\n    position: absolute;\n    bottom: 40px;\n    width: 400px;\n\n    @media screen and (max-width: 480px) {\n       width: 80%;\n    }\n`\n\nexport const HeaderCategory = styled.a`\n    font-family: \"font-regular\";\n    font-size: 14px;\n    letter-spacing: 1px;\n    color: var(--clr-base-white);\n    position: absolute;\n    bottom: 10px;\n    left: 30px;\n    width: 400px;\n    text-decoration: none;\n\n    :hover {\n        text-decoration: underline;\n        opacity: 0.8;\n    }\n\n    @media screen and (max-width: 480px) {\n       width: 80%;\n    }\n`\n\nexport const CategoryMark = styled.div`\n    width: 2px;\n    height: 14px;\n    background-color: #F24423;\n    position: absolute;\n    bottom: 10px;\n`","import React from 'react'\nimport { HeaderTitle, HeaderWrapper, HeaderCategory, CategoryMark } from './HeaderElements'\n\nconst Header = ({ background, title, category, categoryUrl }) => {\n    return (\n        <>\n          <HeaderWrapper background={background}>\n            <HeaderTitle data-testid=\"header-title\">{title}</HeaderTitle>\n            <CategoryMark />\n            <HeaderCategory \n              href={categoryUrl}\n              target=\"_blank\"\n              rel=\"norefferer\"\n              data-testid=\"header-category\" \n            >\n              {category}\n            </HeaderCategory>\n          </HeaderWrapper>\n        </>\n    )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const SelectionWrapper = styled.div`\n    margin-top: 20px;\n    width: 80%;\n    border-bottom: 1px solid rgba(168,181,198,0.2);\n    padding-bottom: 5px;\n`\n\nexport const SelectionTitle = styled.p`\n    font-family: \"font-regular\";\n    color: var(--clr-text-black);\n    font-size: 12px;\n`\n\nexport const SelectionCities = styled.select`\n    width: 100%;\n    border: none;\n    margin-top: 8px;\n    background-color: transparent;\n    cursor: pointer;\n    color: var(--clr-text-grey);\n    :focus{\n        outline: none;\n    }\n`\n\nexport const City = styled.option`\n`","import React from 'react'\nimport { City, SelectionCities, SelectionTitle, SelectionWrapper } from './SelectionElements'\nimport { generateCities } from './SelectionHelper';\n\nconst Selection = ({ data, selectCity }) => {\n\n    const cities = generateCities(data);\n\n    return (\n        <>\n            <SelectionWrapper>\n                <SelectionTitle data-testid=\"selection-title\">Select a city:</SelectionTitle>\n                <SelectionCities \n                    id=\"city\"\n                    data-testid=\"selection-city\" \n                    onChange={selectCity}\n                >\n                    {cities.map((city, i) => <City key={i} value={i+1}>{city}</City>)}\n                </SelectionCities>\n            </SelectionWrapper>\n        </>\n    )\n}\n\nexport default Selection\n","// generate cities\nexport const generateCities = ( data ) => {\n    const res = []\n    if (!data) return res\n    const amount = data[\"total_cities_1_value\"]\n    for (let i = 1; i <= amount; i++) {\n        let obj_name = \"compare-tabs_1_city_\" + i.toString() + \"_name\";\n        res.push(data[obj_name])\n    }\n    return res\n}","import styled from 'styled-components'\n\nexport const Main = styled.div`\n    display: flex;\n    justify-content: center;\n    padding-top: 40px;\n\n    @media screen and (max-width: 768px) {\n        padding-top: 0;\n    }\n`\n\nexport const Wrapper = styled.div`\n    max-width: 960px;\n`\n\nexport const Container = styled.div`\n    width: 100%;\n    padding: 20px 0;\n    display: flex;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n    }\n`\n\nexport const MainContainer = styled.div`\n    width: 75%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    @media screen and (max-width: 768px) {\n        width: 100%;\n    }\n`\n\nexport const SideContainer = styled.div`\n    width: 25%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    @media screen and (max-width: 768px) {\n        width: 100%;\n    }\n`\n\nexport const Loading = styled.div`\n    margin-top: 20px;\n    width: 200px;\n    height: 400px;\n    padding: 20px 20px;\n`\n\nexport const LoadingText = styled.p`\n    text-align: center;\n    font-size: 18px;\n    color: var(--clr-text-black);\n`","import styled from 'styled-components'\n\nexport const ContentWrapper = styled.div`\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.05), 0px 10px 20px rgba(0, 0, 0, 0.1);\n    width: 80%;\n    height: 320px;\n    margin-top: 20px;\n    border-radius: 10px;\n    padding: 20px 20px;\n`\n\nexport const ContentCity = styled.h4`\n    font-size: 16px;\n    font-family: \"font-medium\";\n    color: var(--clr-text-black);\n`\n\nexport const ContentCountry = styled.p`\n    margin-top: 5px;\n    font-size: 14px;\n    color: var(--clr-text-grey);\n`\n\nexport const ContentAqi = styled.div`\n    margin-top: 20px;\n    width: 100%;\n    height: 100px;\n    border: 1px solid rgba(168,181,198,0.2);\n    border-radius: 10px;\n`\n\nexport const QualityIndex = styled.h1`\n    font-size: 32px;\n    margin-top: 20px;\n    text-align: center;\n    font-family: \"font-medium\";\n    color: var(--clr-text-black);\n`\n\nexport const SubIndex = styled.p`\n    margin-top: 5px;\n    font-size: 10px;\n    text-align: center;\n    color: var(--clr-text-grey);\n`\n\nexport const ContentCigar = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    border: 1px solid rgba(168,181,198,0.2);\n    border-radius: 10px;\n    padding: 10px 0px;\n`\n\nexport const Cigar = styled.img`\n    width: 8px;\n`\n\nexport const ContentInfo = styled.p`\n    font-size: 9px;\n    text-align: justify;\n    line-height: 12px;\n    color: var(--clr-text-grey);\n    margin-top: 15px;\n    padding: 0 7px;\n`","import React from 'react'\nimport { ContentCigar, ContentAqi, ContentCity, ContentCountry, ContentWrapper, QualityIndex, SubIndex, Cigar, ContentInfo } from './ContentElement'\nimport { generateCigars, splitIndex } from './ContentHelper'\n\nconst Content = ({ city, aqi, cigg, info }) => {\n\n    const cigar_icon = process.env.PUBLIC_URL + \"img/icon/cigar.png\"\n    const [ quality_index, sub_index ] = splitIndex(aqi)\n    const cigars = generateCigars(cigg)\n\n    return (\n        <>\n            <ContentWrapper>\n                <ContentCity data-testid=\"content-city\">{city}</ContentCity>\n                <ContentCountry data-testid=\"content-country\">India</ContentCountry>\n                <ContentAqi data-testid=\"content-aqi\">\n                    <QualityIndex>{quality_index}</QualityIndex>\n                    <SubIndex>{sub_index} | 21.6 μg/m3</SubIndex>\n                </ContentAqi>\n                <ContentCigar data-testid=\"content-cigar\">\n                    { cigars.map((i) => {\n                        return <Cigar key={i} src={cigar_icon} draggable={false} />\n                    }) }\n                </ContentCigar>\n                <ContentInfo data-testid=\"content-info\">\n                    {info}\n                </ContentInfo>\n            </ContentWrapper>\n        </>\n    )\n}\n\nexport default Content\n","// split index\nexport const splitIndex = (aqi) => {\n    if (!aqi || (aqi.indexOf(' ') < 0)) return [\"no data\", \"no data\"]\n    return aqi.split(\" \")\n}\n\n// generate cigars\nexport const generateCigars = (num) => {\n    let cigs = []\n    if (num === 0) return cigs\n    for (let i = 1; i <= num; i++) {\n        cigs.push(i)\n    }\n    return cigs\n}","export const processData = ( index ) => {\n    if (!index) return {}\n    var res = {\n        city: \"compare-tabs_1_city_\" + index + \"_name\",\n        aqi: \"compare-tabs_1_city_\" + index + \"_aqi\",\n        cigg: \"compare-tabs_1_city_\" + index + \"_cigg\",\n        info: \"compare-tabs_1_method\"\n    }\n    return res\n}\n","import styled from 'styled-components'\n\nexport const ArticleWrapper = styled.div`\n    width: 90%;\n    padding: 20px 0px;\n`\n\nexport const ArticleInfo = styled.span`\n    color: var(--clr-text-grey);\n    font-size: 9px;\n`\n\nexport const Separator = styled.div`\n    height: 1px;\n    width: 100%;\n    background-color: rgba(168,181,198,0.2);\n    margin-top: 5px;\n`\n\nexport const ParagraphWrapper = styled.div`\n    width: 100%;\n    margin-top: 20px;\n`\n\nexport const Paragraph = styled.div`\n    color: var(--clr-text-black);\n    font-family: \"font-regular\";\n    font-size: 12px;\n    text-align: justify;\n    margin-top: 10px;\n    line-height: 17px;\n`","import React from 'react'\nimport { ArticleInfo, ArticleWrapper, Paragraph, ParagraphWrapper, Separator } from './ArticleElement'\nimport { generateParagraph } from './ArticleHelper'\n\nconst Article = ({ data }) => {\n    \n    const author = data ? data['article-info_1_byline'] : \"unknown\"\n    const date = data ? data['article-info_1_date'] : \"date undefined\"\n    const paragraphs = generateParagraph(data);\n\n    return (\n        <>\n            <ArticleWrapper>\n                <ArticleInfo data-testid='article-info'>{date} | {author}</ArticleInfo>\n                <Separator />\n                <ParagraphWrapper data-testid='article-paragraph'>\n                    {paragraphs.map((paragraph, i) => {\n                        return <Paragraph key={i}>{paragraph}</Paragraph>\n                    })}\n                </ParagraphWrapper>\n            </ArticleWrapper>\n        </>\n    )\n}\n\nexport default Article\n","// generate paragraphs\nexport const generateParagraph = ( data ) => {\n    let p = []\n    if (!data) return p\n    for( let i = 1; i <= 100; i++) {\n        let obj_prop = \"p_\" + i + \"_value\" \n        if (!data.hasOwnProperty(obj_prop)) break;\n        p.push(data[obj_prop]) \n    }\n    return p\n}","import React, { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport './App.css';\nimport Header from './components/Header';\nimport Selection from './components/Selection';\nimport { Container, Loading, LoadingText, MainContainer, SideContainer, Wrapper, Main} from './components/Layout/LayoutElements';\nimport Content from './components/Content';\nimport { processData } from './helper';\nimport Article from './components/Article';\n\nconst App = () => {\n\n  // fetch data\n  const [data, setData] = useState(null)\n  const fetchData = () => {\n    fetch('/data/english.json')\n      .then((res) => { return res.json() })\n      .then((resJson) => { setData(resJson) })\n  }\n  useEffect(() => {\n    fetchData()\n  },[])\n\n  // city state\n  const [city, setCity] = useState(1)\n  const selectCity = (e) => {\n    setCity(e.target.value)\n  }\n\n  // page title\n  const title = data ? data['hero_1_title'] : \"Article\" \n\n  return (\n    <Main>\n      <Helmet>\n        <meta charSet=\"utf-8\"/>\n        <title>{title}</title>\n      </Helmet>\n      <Wrapper>\n        { data ? (\n          <>\n            <Header \n              background={data['hero_1_image']}\n              title={data['hero_1_title']}\n              category={data['article-info_1_category']}\n              categoryUrl={data['article-info_1_category_url']}\n            />\n            <Container>\n              <MainContainer>\n                <Article\n                  data={data}\n                />\n              </MainContainer>\n              <SideContainer>\n                <Selection \n                  data={data}\n                  selectCity={selectCity}\n                />\n                <Content\n                  city={data[processData(city).city]}\n                  aqi={data[processData(city).aqi]}\n                  cigg={data[processData(city).cigg]}\n                  info={data[processData(city).info]}\n                />\n              </SideContainer>\n            </Container>\n          </>\n        ) \n        : \n        (\n          <Loading>\n            <LoadingText>Loading page...</LoadingText>\n          </Loading>\n        )}\n      </Wrapper>\n    </Main>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}